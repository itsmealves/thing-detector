{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/file.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutes } from './app.routes'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(AppRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nexport const AppRoutes: Routes = [\n  { path: '**', component: HomeComponent }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FileService {\n    private baseUrl: string = '/'\n\n    constructor(private http: HttpClient) {}\n\n    public upload(file: File) {\n        return new Promise((resolve, reject) => {\n            const formData: FormData = new FormData();\n            formData.append('file', file, file.name);\n\n            this.http.post(this.baseUrl + 'file', formData)\n                .subscribe(resolve, reject);\n        });\n    }\n\n    public query(key: string) {\n        return new Promise((resolve, reject) => {\n            const params = new HttpParams().set('key', key);\n\n            this.http.get(this.baseUrl + 'file', {params})\n                .subscribe(resolve, reject);\n        });\n    }\n}\n","module.exports = \".container {\\n    display: flex;\\n    flex-flow: line nowrap;\\n    height: 100vh;\\n    text-align: center;\\n}\\n\\n.left-column, .right-column {\\n    width: 50%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-flow: column nowrap;\\n}\\n\\n.left-column {\\n    background: #45ADA8;\\n}\\n\\n.right-column {\\n    background: #594f4f;\\n}\\n\\n.detection {\\n    max-width: 80%;\\n}\\n\\n.user-form {\\n    width: 100%;\\n    display: flex;\\n    align-items: space-evenly;\\n    justify-content: space-evenly;\\n    flex-flow: row wrap;\\n}\\n\\n.user-form > div {\\n    width: 50%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-flow: column nowrap;\\n}\\n\\n.inline-input {\\n    width: 100%;\\n    display: flex;\\n    align-items: baseline;\\n    justify-content: space-evenly;\\n    flex-flow: row nowrap;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"left-column\\\">\\n        <h1>Vamos lá!</h1>\\n        <div class=\\\"user-form\\\">\\n            <div>\\n                <h2>Envie uma nova imagem</h2>\\n                <label for=\\\"file-upload\\\" class=\\\"custom-file-upload\\\">\\n                    <i class=\\\"fa fa-cloud-upload\\\"></i> Selecionar imagem\\n                </label>\\n                <input #fileInput id=\\\"file-upload\\\" type=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\"/>\\n            </div>\\n\\n            <div>\\n                <h2>Procure por imagens já processadas</h2>\\n                <div class=\\\"inline-input\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]='queryKey' placeholder=\\\"Pesquisar por chave\\\" />\\n                    <button (click)=\\\"query()\\\">Pesquisar</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column\\\">\\n        <div *ngIf='hasImage()'>\\n            <img class='detection' src='{{ url }}' />\\n            <h3>Chave: {{ key }}</h3>\\n        </div>\\n\\n        <div *ngIf='!hasImage()'>\\n            <h1>Nenhuma imagem a ser exibida</h1>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"waiting\\\" [class.not-anymore]=\\\"done\\\" >\\n    <div class=\\\"loader\\\">\\n    </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FileService } from '../file.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    private done: boolean = true;\n    private url: string = '';\n    private key: string = '';\n    private queryKey: string = '';\n\n    @ViewChild('fileInput')\n    private fileInput: any;\n\n    constructor(private fileService: FileService) {}\n\n    ngOnInit() {}\n\n    public query() {\n        this.done = false;\n        this.fileService.query(this.queryKey)\n            .then(this.serviceSuccess.bind(this))\n            .catch(this.serviceFailure.bind(this));\n\n        this.queryKey = '';\n    }\n\n    public updateImage(detection: any) {\n        this.url = detection.url;\n        this.key = detection.key;\n    }\n\n    public hasImage() {\n        return this.url.length > 0;\n    }\n\n    public serviceSuccess(response) {\n        this.updateImage(response);\n\n        setTimeout(() => {\n            this.done = true;\n        }, 1000);\n    }\n\n    public serviceFailure(error) {\n        console.log(error);\n\n        setTimeout(() => {\n            this.done = true;\n        }, 1000);\n    }\n\n    public handleFileInput(files: FileList) {\n        const file = files.item(0);\n\n        this.done = false;\n        this.fileService.upload(file)\n            .then(this.serviceSuccess.bind(this))\n            .catch(this.serviceFailure.bind(this));\n\n        this.fileInput.nativeElement.value = \"\";\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}